{
	"info": {
		"_postman_id": "033eee41-51af-421e-b059-26fab0c93127",
		"name": "HNGX Stage2 Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23502627",
		"_collection_link": "https://www.postman.com/blue-shadow-625762/workspace/mustopha/collection/23502627-033eee41-51af-421e-b059-26fab0c93127?action=share&source=collection_link&creator=23502627"
	},
	"item": [
		{
			"name": "Create Person",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 201', function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"})",
							"",
							"pm.test('Response has the required fields', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.id).to.exist.and.to.be.a('string');",
							"    pm.expect(responseData.name).to.exist.and.to.be.a('string');",
							"})",
							"",
							"pm.test('Id is a non-empty string', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Value should not be empty');",
							"})",
							"",
							"pm.test('Name is a non-empty string', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.name).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, 'Value should not be empty');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Mustopha Qomorudeen\",\n    \"state\": \"Osun\",\n    \"gender\": \"male\",\n    \"age\": 20\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://hngx-mustopha-backend.cyclic.app/api",
					"protocol": "https",
					"host": [
						"hngx-mustopha-backend",
						"cyclic",
						"app"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Person",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('Response has the required fields', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.id).to.exist;",
							"    pm.expect(responseData.name).to.exist;",
							"})",
							"",
							"pm.test('Id is a non-empty string', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Value should not be empty');",
							"})",
							"",
							"pm.test('Name is a non-empty string', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Value should not be empty');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hngx-mustopha-backend.cyclic.app/api/Mustopha%20Qomorudeen",
					"protocol": "https",
					"host": [
						"hngx-mustopha-backend",
						"cyclic",
						"app"
					],
					"path": [
						"api",
						"Mustopha%20Qomorudeen"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Person",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"})",
							"",
							"pm.test('Response has the required fields', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.id).to.exist.and.to.be.a('string');",
							"    pm.expect(responseData.name).to.exist.and.to.be.a('string');",
							"})",
							"",
							"pm.test('Id is a non-empty string', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Value should not be empty');",
							"})",
							"",
							"pm.test('Name is a non-empty string', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Name should not be empty');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"state\": \"Osun\",\n    \"gender\": \"male\",\n    \"age\": 20\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://hngx-mustopha-backend.cyclic.app/api/Mustopha%20Qomorudeen",
					"protocol": "https",
					"host": [
						"hngx-mustopha-backend",
						"cyclic",
						"app"
					],
					"path": [
						"api",
						"Mustopha%20Qomorudeen"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Person",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('Response has the required field - message', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.message).to.exist.and.to.be.a('string');",
							"})",
							"",
							"pm.test('Message is a non-empty string', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Message should not be empty');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://hngx-mustopha-backend.cyclic.app/api/Mustopha%20Qomorudeen",
					"protocol": "https",
					"host": [
						"hngx-mustopha-backend",
						"cyclic",
						"app"
					],
					"path": [
						"api",
						"Mustopha%20Qomorudeen"
					]
				}
			},
			"response": []
		}
	]
}